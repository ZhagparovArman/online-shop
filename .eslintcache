[{"C:\\Users\\karin\\Desktop\\online-shop\\src\\App.js":"1","C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\Product.js":"2","C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\Categories.js":"3","C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\Products.js":"4","C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\SubCategories.js":"5","C:\\Users\\karin\\Desktop\\online-shop\\src\\firebase.js":"6"},{"size":481,"mtime":1610424364444,"results":"7","hashOfConfig":"8"},{"size":4516,"mtime":1610430431015,"results":"9","hashOfConfig":"8"},{"size":2107,"mtime":1610424364450,"results":"10","hashOfConfig":"8"},{"size":4470,"mtime":1610428437624,"results":"11","hashOfConfig":"8"},{"size":2833,"mtime":1610424364454,"results":"12","hashOfConfig":"8"},{"size":761,"mtime":1610424364459,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"3q7nu0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\karin\\Desktop\\online-shop\\src\\App.js",["28","29","30","31","32","33"],"C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\Product.js",["34","35","36","37","38"],"import { useState, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\n\r\nconst db = firebase.firestore();\r\nconst storageRef = firebase.storage().ref(\"images\");\r\n\r\nconst Product = ({ product, categories }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState(product.category);\r\n  const [name, setName] = useState(product.name);\r\n  const [feature, setFeature] = useState(product.feature);\r\n  const [description, setDescription] = useState(product.description);\r\n  const [fileUrl, setFileUrl] = useState(product.image);\r\n  const [price, setPrice] = useState(product.price);\r\n  const [isPopular, setIsPopular] = useState(product.isPopular);\r\n  const [featTitle, setFeatTitle] = useState(\"\");\r\n  const [featValue, setFeatValue] = useState(\"\");\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = firebase.storage().ref(\"images\");\r\n    const fileRef = storageRef.child(file.name);\r\n    await fileRef.put(file);\r\n    const url = await fileRef.getDownloadURL();\r\n    setFileUrl([...fileUrl, { url: url, title: file.name }]);\r\n  };\r\n\r\n  const deleteUrl = (name) => {\r\n    const storageRef = firebase.storage().ref(\"images\").child(name);\r\n    storageRef.delete();\r\n    const newFileUrl = fileUrl.filter((file) => file.title !== name);\r\n    setFileUrl([...newFileUrl]);\r\n  };\r\n\r\n  const updateTitle = (e) => {\r\n    // e.preventDefault();\r\n    setFeatTitle(e.target.value);\r\n  };\r\n\r\n  const updateValue = (e) => {\r\n    // e.preventDefault();\r\n    setFeatValue(e.target.value);\r\n  };\r\n\r\n  const updateFeature = (e, feat) => {\r\n    e.preventDefault();\r\n    const newFeature = feature.map((f) => {\r\n      if (f.title === feat.title) {\r\n        f.title = featTitle;\r\n        f.value = featValue;\r\n      }\r\n    });\r\n    setFeature([...newFeature]);\r\n  };\r\n\r\n  const onEdit = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\")\r\n      .doc(product.id)\r\n      .set({\r\n        ...product,\r\n        name: name,\r\n        image: fileUrl,\r\n        price: price,\r\n        category: selectedCategory,\r\n        feature: {\r\n          title: feature.title,\r\n          value: feature.value,\r\n        },\r\n        description: description,\r\n        isPopular: isPopular,\r\n      });\r\n  };\r\n\r\n  const onDelete = () => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"products\").doc(product.id).delete();\r\n    // deleteUrl(banner.image.title);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        value={selectedCategory}\r\n        onChange={(e) => setSelectedCategory(e.target.value)}\r\n        name=\"categories\"\r\n      >\r\n        <option defaultValue=\"\">не созданы</option>\r\n        {categories.map((сategory) => {\r\n          return (\r\n            <option key={сategory.id} value={сategory.name}>\r\n              {сategory.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <input type=\"file\" onChange={onFileChange} />\r\n      {fileUrl.map((img, i) => {\r\n        return (\r\n          <div key={i}>\r\n            <img width=\"100\" height=\"100\" src={img.url} alt=\"\" />\r\n\r\n            <button onClick={() => deleteUrl(img.title)}>delete</button>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Название\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Описание\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      {feature.map((feat) => {\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"название характеристики\"\r\n            value={feat.title}\r\n            onChange={(e) => updateTitle(e)}\r\n          />\r\n          <input\r\n            placeholder=\"значение характеристики\"\r\n            value={feat.value}\r\n            onChange={(e) => updateValue(e)}\r\n          />\r\n          <button onClick={(e) => updateFeature(e, feat)}>\r\n            update feature\r\n          </button>\r\n        </div>;\r\n      })}\r\n\r\n      <input\r\n        type=\"checkbox\"\r\n        value={isPopular}\r\n        onChange={(e) => setIsPopular(!isPopular)}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Цена\"\r\n        value={price}\r\n        onChange={(e) => setPrice(e.target.value)}\r\n      />\r\n      <button onClick={onEdit}>edit</button>\r\n      <button onClick={onDelete}>Delete</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\Categories.js",[],"C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\Products.js",["39"],"import { useState, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport Product from \"./Product\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst Products = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [feature, setFeature] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [fileUrl, setFileUrl] = useState([]);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [isPopular, setIsPopular] = useState(false);\r\n  const [featTitle, setFeatTitle] = useState(\"\");\r\n  const [featValue, setFeatValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"categories\").get();\r\n      setCategories(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = firebase.storage().ref(\"images\");\r\n    const fileRef = storageRef.child(file.name);\r\n    await fileRef.put(file);\r\n    const url = await fileRef.getDownloadURL();\r\n    setFileUrl([...fileUrl, { url: url, title: file.name }]);\r\n  };\r\n\r\n  const deleteUrl = (name) => {\r\n    const storageRef = firebase.storage().ref(\"images\").child(name);\r\n    storageRef.delete();\r\n  };\r\n\r\n  const addFeature = (e) => {\r\n    e.preventDefault();\r\n    setFeature([...feature, { title: featTitle, value: featValue }]);\r\n    setFeatTitle(\"\");\r\n    setFeatValue(\"\");\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if (!fileUrl) {\r\n    //   return;\r\n    // }\r\n    await db.collection(\"products\").add({\r\n      name: name,\r\n      image: fileUrl,\r\n      price: price,\r\n      category: selectedCategory,\r\n      feature: feature,\r\n      description: description,\r\n      isPopular: isPopular,\r\n    });\r\n    setFeature([]);\r\n    setFileUrl([]);\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setIsPopular(\"\");\r\n    setSelectedCategory(\"\");\r\n    setPrice(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      const products = await db.collection(\"products\").get();\r\n      setProducts(products.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          name=\"categories\"\r\n        >\r\n          <option defaultValue=\"\">не созданы</option>\r\n          {categories.map((сategory) => {\r\n            return (\r\n              <option key={сategory.id} value={сategory.name}>\r\n                {сategory.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <input type=\"file\" onChange={onFileChange} />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Название\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Описание\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"название характеристики\"\r\n            value={featTitle}\r\n            onChange={(e) => setFeatTitle(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"значение характеристики\"\r\n            value={featValue}\r\n            onChange={(e) => setFeatValue(e.target.value)}\r\n          />\r\n          <button onClick={addFeature}>add feature</button>\r\n        </div>\r\n        <div>\r\n          <p>{feature.title}</p>\r\n          <p>{feature.value}</p>\r\n        </div>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={isPopular}\r\n          onChange={(e) => setIsPopular(!isPopular)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Цена\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n\r\n        <button>Submit</button>\r\n      </form>\r\n      {products.map((product) => (\r\n        <Product key={product.id} product={product} categories={categories} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","C:\\Users\\karin\\Desktop\\online-shop\\src\\components\\admin\\SubCategories.js",[],"C:\\Users\\karin\\Desktop\\online-shop\\src\\firebase.js",[],{"ruleId":"40","severity":1,"message":"41","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":18},{"ruleId":"40","severity":1,"message":"44","line":1,"column":20,"nodeType":"42","messageId":"43","endLine":1,"endColumn":29},{"ruleId":"40","severity":1,"message":"45","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":15},{"ruleId":"40","severity":1,"message":"46","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":18},{"ruleId":"40","severity":1,"message":"47","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":21},{"ruleId":"40","severity":1,"message":"48","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":1,"column":20,"nodeType":"42","messageId":"43","endLine":1,"endColumn":29},{"ruleId":"40","severity":1,"message":"49","line":4,"column":7,"nodeType":"42","messageId":"43","endLine":4,"endColumn":9},{"ruleId":"40","severity":1,"message":"50","line":5,"column":7,"nodeType":"42","messageId":"43","endLine":5,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":46,"column":40,"nodeType":"53","messageId":"54","endLine":46,"endColumn":42},{"ruleId":"51","severity":1,"message":"52","line":118,"column":27,"nodeType":"53","messageId":"54","endLine":118,"endColumn":29},{"ruleId":"40","severity":1,"message":"55","line":38,"column":9,"nodeType":"42","messageId":"43","endLine":38,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Banners' is defined but never used.","'Categories' is defined but never used.","'SubCategories' is defined but never used.","'firebase' is defined but never used.","'db' is assigned a value but never used.","'storageRef' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'deleteUrl' is assigned a value but never used."]